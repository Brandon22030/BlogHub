// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  password  String
  name      String
  imageUrl  String    @default("none")
  role      Role      @default(USER)
  articles  Article[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Article {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  content    String
  imageUrl   String?
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String    @db.ObjectId
  comments   Comment[]
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String    @db.ObjectId
  views      Int       @default(0)
  likes      Int       @default(0)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  article   Article  @relation(fields: [articleId], references: [id])
  articleId String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  imageUrl String
  articles Article[]
}

enum Role {
  USER
  ADMIN
}
